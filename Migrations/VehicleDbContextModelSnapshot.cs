// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleWatch.Data;

#nullable disable

namespace VehicleWatch.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    partial class VehicleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleWatch.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Name = "Adam"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Name = "Bengt"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Name = "Cathy"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Name = "David"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Name = "Erika"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Name = "Felicia"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Name = "Gabriella"
                        },
                        new
                        {
                            EmployeeId = 8,
                            Name = "Henrik"
                        });
                });

            modelBuilder.Entity("VehicleWatch.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<bool>("Emergency")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ReportDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            Emergency = true,
                            EmployeeId = 1,
                            ReportDescription = "Fel med motor",
                            ReportStatus = 0,
                            ReportedDate = new DateTime(2024, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            ReportId = 2,
                            Emergency = false,
                            EmployeeId = 2,
                            ReportDescription = "vindrutetorkaren fungerar inte",
                            ReportStatus = 0,
                            ReportedDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        },
                        new
                        {
                            ReportId = 3,
                            Emergency = false,
                            EmployeeId = 3,
                            ReportDescription = "sprickan i vindrutan",
                            ReportStatus = 2,
                            ReportedDate = new DateTime(2024, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 3
                        },
                        new
                        {
                            ReportId = 4,
                            Emergency = false,
                            EmployeeId = 4,
                            ReportDescription = "sprickan i vindrutan",
                            ReportStatus = 0,
                            ReportedDate = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        });
                });

            modelBuilder.Entity("VehicleWatch.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            RegistrationNumber = "ABC123"
                        },
                        new
                        {
                            VehicleId = 2,
                            RegistrationNumber = "WEL217"
                        },
                        new
                        {
                            VehicleId = 3,
                            RegistrationNumber = "UEN357"
                        },
                        new
                        {
                            VehicleId = 4,
                            RegistrationNumber = "KAZ813"
                        },
                        new
                        {
                            VehicleId = 5,
                            RegistrationNumber = "WES123"
                        },
                        new
                        {
                            VehicleId = 6,
                            RegistrationNumber = "NEM345"
                        },
                        new
                        {
                            VehicleId = 7,
                            RegistrationNumber = "MLB803"
                        });
                });

            modelBuilder.Entity("VehicleWatch.Models.Report", b =>
                {
                    b.HasOne("VehicleWatch.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleWatch.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
